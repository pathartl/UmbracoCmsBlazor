@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Web
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Umbraco.Cms.Blazor.Models
@using Umbraco.Cms.Blazor.Services
@inject UmbracoClient Umbraco

@if (_componentType != null)
{
    <DynamicComponent Type="_componentType" Parameters="_parameters" />
}


@code {
    [Parameter] public RouteData RouteData { get; set; }

    Type? _componentType = null;
    Type? _modelType = null;
    Dictionary<string, object> _parameters = new();

    protected override async Task OnInitializedAsync()
    {
        var pageContent = await Umbraco.Content.GetByPathAsync(HttpUtility.UrlEncode(RouteData.Template));

        _componentType = ComponentService.GetComponentType(pageContent.ContentType);

        var jObject = pageContent.Properties as JObject;
        var dict = jObject.ToObject<Dictionary<string, object>>();

        foreach (var kvp in dict)
        {
            _parameters[kvp.Key] = kvp.Value;
        }

        _parameters["ContentType"] = pageContent.ContentType;
        // Need to fix this
        /*_parameters["Model"] = pageContent.Properties.Deserialize(_modelType, new JsonSerializerOptions
        {
            IncludeFields = true,
        });*/
        _parameters["CreateDate"] = pageContent.CreateDate;
        _parameters["UpdateDate"] = pageContent.UpdateDate;
        _parameters["Id"] = pageContent.Id;
        _parameters["Route"] = pageContent.Route;
        _parameters["Name"] = pageContent.Name;
    }

}